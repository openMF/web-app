/**
 * Apache Fineract REST API
 * Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.
 *
 * The version of the OpenAPI document: 0.0.0-9ca128fc
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { LoanCollateralManagement } from './loanCollateralManagement';
import { Money } from './money';
import { LoanChargePaidBy } from './loanChargePaidBy';
import { Loan } from './loan';
import { PaymentDetail } from './paymentDetail';
import { ExternalId } from './externalId';
import { LoanTransactionRelation } from './loanTransactionRelation';
import { LoanTransactionToRepaymentScheduleMapping } from './loanTransactionToRepaymentScheduleMapping';


export interface LoanTransaction { 
    accrual?: boolean;
    accrualTransaction?: boolean;
    allowTypeTransactionAtTheTimeOfLastUndo?: boolean;
    amount?: number;
    chargeAdjustment?: boolean;
    chargeOff?: boolean;
    chargePayment?: boolean;
    chargeRefund?: boolean;
    chargeback?: boolean;
    chargesWaiver?: boolean;
    createdBy?: number;
    createdDate?: string;
    createdDateTime?: string;
    creditBalanceRefund?: boolean;
    dateOf?: string;
    disbursement?: boolean;
    editable?: boolean;
    externalId?: ExternalId;
    feeChargesPortion?: number;
    goodwillCredit?: boolean;
    id?: number;
    incomePosting?: boolean;
    interestPortion?: number;
    interestWaiver?: boolean;
    lastModifiedBy?: number;
    lastModifiedDate?: string;
    loan?: Loan;
    loanChargesPaid?: Set<LoanChargePaidBy>;
    loanCollateralManagementSet?: Set<LoanCollateralManagement>;
    loanTransactionRelations?: Set<LoanTransactionRelation>;
    loanTransactionToRepaymentScheduleMappings?: Set<LoanTransactionToRepaymentScheduleMapping>;
    manuallyAdjustedOrReversed?: boolean;
    merchantIssuedRefund?: boolean;
    _new?: boolean;
    nonMonetaryTransaction?: boolean;
    nonZero?: boolean;
    notCreditBalanceRefund?: boolean;
    notIncomePosting?: boolean;
    notInterestWaiver?: boolean;
    notManuallyAdjustedOrReversed?: boolean;
    notRecoveryRepayment?: boolean;
    notRefundForActiveLoan?: boolean;
    notRepaymentLikeType?: boolean;
    notReversed?: boolean;
    notWaiver?: boolean;
    outstandingLoanBalance?: number;
    overPayments?: Money;
    paymentDetail?: PaymentDetail;
    paymentTransaction?: boolean;
    payoutRefund?: boolean;
    penaltyChargesPortion?: number;
    penaltyPayment?: boolean;
    principalPortion?: number;
    recoveryRepayment?: boolean;
    refund?: boolean;
    refundForActiveLoan?: boolean;
    repayment?: boolean;
    repaymentAtDisbursement?: boolean;
    repaymentLikeType?: boolean;
    reversed?: boolean;
    submittedOnDate?: string;
    transactionDate?: string;
    typeAllowedForChargeback?: boolean;
    typeOf?: LoanTransaction.TypeOfEnum;
    waiver?: boolean;
    writeOff?: boolean;
}
export namespace LoanTransaction {
    export type TypeOfEnum = 'INVALID' | 'DISBURSEMENT' | 'REPAYMENT' | 'CONTRA' | 'WAIVE_INTEREST' | 'REPAYMENT_AT_DISBURSEMENT' | 'WRITEOFF' | 'MARKED_FOR_RESCHEDULING' | 'RECOVERY_REPAYMENT' | 'WAIVE_CHARGES' | 'ACCRUAL' | 'INITIATE_TRANSFER' | 'APPROVE_TRANSFER' | 'WITHDRAW_TRANSFER' | 'REJECT_TRANSFER' | 'REFUND' | 'CHARGE_PAYMENT' | 'REFUND_FOR_ACTIVE_LOAN' | 'INCOME_POSTING' | 'CREDIT_BALANCE_REFUND' | 'MERCHANT_ISSUED_REFUND' | 'PAYOUT_REFUND' | 'GOODWILL_CREDIT' | 'CHARGE_REFUND' | 'CHARGEBACK' | 'CHARGE_ADJUSTMENT' | 'CHARGE_OFF';
    export const TypeOfEnum = {
        Invalid: 'INVALID' as TypeOfEnum,
        Disbursement: 'DISBURSEMENT' as TypeOfEnum,
        Repayment: 'REPAYMENT' as TypeOfEnum,
        Contra: 'CONTRA' as TypeOfEnum,
        WaiveInterest: 'WAIVE_INTEREST' as TypeOfEnum,
        RepaymentAtDisbursement: 'REPAYMENT_AT_DISBURSEMENT' as TypeOfEnum,
        Writeoff: 'WRITEOFF' as TypeOfEnum,
        MarkedForRescheduling: 'MARKED_FOR_RESCHEDULING' as TypeOfEnum,
        RecoveryRepayment: 'RECOVERY_REPAYMENT' as TypeOfEnum,
        WaiveCharges: 'WAIVE_CHARGES' as TypeOfEnum,
        Accrual: 'ACCRUAL' as TypeOfEnum,
        InitiateTransfer: 'INITIATE_TRANSFER' as TypeOfEnum,
        ApproveTransfer: 'APPROVE_TRANSFER' as TypeOfEnum,
        WithdrawTransfer: 'WITHDRAW_TRANSFER' as TypeOfEnum,
        RejectTransfer: 'REJECT_TRANSFER' as TypeOfEnum,
        Refund: 'REFUND' as TypeOfEnum,
        ChargePayment: 'CHARGE_PAYMENT' as TypeOfEnum,
        RefundForActiveLoan: 'REFUND_FOR_ACTIVE_LOAN' as TypeOfEnum,
        IncomePosting: 'INCOME_POSTING' as TypeOfEnum,
        CreditBalanceRefund: 'CREDIT_BALANCE_REFUND' as TypeOfEnum,
        MerchantIssuedRefund: 'MERCHANT_ISSUED_REFUND' as TypeOfEnum,
        PayoutRefund: 'PAYOUT_REFUND' as TypeOfEnum,
        GoodwillCredit: 'GOODWILL_CREDIT' as TypeOfEnum,
        ChargeRefund: 'CHARGE_REFUND' as TypeOfEnum,
        Chargeback: 'CHARGEBACK' as TypeOfEnum,
        ChargeAdjustment: 'CHARGE_ADJUSTMENT' as TypeOfEnum,
        ChargeOff: 'CHARGE_OFF' as TypeOfEnum
    };
}


