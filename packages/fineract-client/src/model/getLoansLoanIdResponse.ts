/**
 * Apache Fineract REST API
 * Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.
 *
 * The version of the OpenAPI document: 0.0.0-9ca128fc
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { GetLoansLoanIdStatus } from './getLoansLoanIdStatus';
import { GetLoansLoanIdRepaymentFrequencyType } from './getLoansLoanIdRepaymentFrequencyType';
import { GetLoansLoanIdLoanType } from './getLoansLoanIdLoanType';
import { GetLoansLoanIdTimeline } from './getLoansLoanIdTimeline';
import { GetLoansLoanIdAmortizationType } from './getLoansLoanIdAmortizationType';
import { GetLoansLoanIdTermPeriodFrequencyType } from './getLoansLoanIdTermPeriodFrequencyType';
import { GetLoansLoanIdCurrency } from './getLoansLoanIdCurrency';
import { GetLoansLoanIdCollectionData } from './getLoansLoanIdCollectionData';
import { GetLoansLoanIdTransactions } from './getLoansLoanIdTransactions';
import { GetLoansLoanIdLoanChargeData } from './getLoansLoanIdLoanChargeData';
import { GetLoansLoanIdDisbursementDetails } from './getLoansLoanIdDisbursementDetails';
import { GetLoansLoanIdInterestRateFrequencyType } from './getLoansLoanIdInterestRateFrequencyType';
import { GetLoansLoanIdInterestType } from './getLoansLoanIdInterestType';
import { GetLoansLoanIdRepaymentSchedule } from './getLoansLoanIdRepaymentSchedule';
import { GetLoansLoanIdSummary } from './getLoansLoanIdSummary';
import { GetLoansLoanIdInterestCalculationPeriodType } from './getLoansLoanIdInterestCalculationPeriodType';
import { GetDelinquencyRangesResponse } from './getDelinquencyRangesResponse';


/**
 * GetLoansLoanIdResponse
 */
export interface GetLoansLoanIdResponse { 
    accountNo?: string;
    amortizationType?: GetLoansLoanIdAmortizationType;
    annualInterestRate?: number;
    approvedPrincipal?: number;
    chargedOff?: boolean;
    /**
     * Set of charges
     */
    charges?: Array<GetLoansLoanIdLoanChargeData>;
    clientExternalId?: string;
    clientId?: number;
    clientName?: string;
    clientOfficeId?: number;
    currency?: GetLoansLoanIdCurrency;
    delinquencyRange?: GetDelinquencyRangesResponse;
    delinquent?: GetLoansLoanIdCollectionData;
    disallowExpectedDisbursements?: boolean;
    /**
     * Set of GetLoansLoanIdDisbursementDetails
     */
    disbursementDetails?: Set<GetLoansLoanIdDisbursementDetails>;
    externalId?: string;
    fixedPrincipalPercentagePerInstallment?: number;
    fraud?: boolean;
    id?: number;
    interestCalculationPeriodType?: GetLoansLoanIdInterestCalculationPeriodType;
    interestRateFrequencyType?: GetLoansLoanIdInterestRateFrequencyType;
    interestRatePerPeriod?: number;
    interestType?: GetLoansLoanIdInterestType;
    isFloatingInterestRate?: boolean;
    lastClosedBusinessDate?: string;
    loanOfficerId?: number;
    loanOfficerName?: string;
    loanProductDescription?: string;
    loanProductId?: number;
    loanProductName?: string;
    loanPurposeId?: number;
    loanPurposeName?: string;
    loanType?: GetLoansLoanIdLoanType;
    netDisbursalAmount?: number;
    numberOfRepayments?: number;
    overpaidOnDate?: string;
    principal?: number;
    proposedPrincipal?: number;
    repaymentEvery?: number;
    repaymentFrequencyType?: GetLoansLoanIdRepaymentFrequencyType;
    repaymentSchedule?: GetLoansLoanIdRepaymentSchedule;
    status?: GetLoansLoanIdStatus;
    summary?: GetLoansLoanIdSummary;
    termFrequency?: number;
    termPeriodFrequencyType?: GetLoansLoanIdTermPeriodFrequencyType;
    timeline?: GetLoansLoanIdTimeline;
    totalOverpaid?: number;
    transactionProcessingStrategyCode?: string;
    /**
     * Set of GetLoansLoanIdTransactions
     */
    transactions?: Array<GetLoansLoanIdTransactions>;
}

