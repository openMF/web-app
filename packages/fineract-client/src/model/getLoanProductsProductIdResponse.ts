/**
 * Apache Fineract REST API
 * Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.
 *
 * The version of the OpenAPI document: 0.0.0-9ca128fc
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { GetLoanAccountingMappings } from './getLoanAccountingMappings';
import { GetLoanProductsInterestRateFrequencyType } from './getLoanProductsInterestRateFrequencyType';
import { GetLoanPaymentChannelToFundSourceMappings } from './getLoanPaymentChannelToFundSourceMappings';
import { GetLoanProductsAccountingRule } from './getLoanProductsAccountingRule';
import { GetDelinquencyBucketsResponse } from './getDelinquencyBucketsResponse';
import { GetLoanProductsRepaymentFrequencyType } from './getLoanProductsRepaymentFrequencyType';
import { GetLoanProductsInterestTemplateType } from './getLoanProductsInterestTemplateType';
import { GetLoanFeeToIncomeAccountMappings } from './getLoanFeeToIncomeAccountMappings';
import { GetLoansProductsInterestCalculationPeriodType } from './getLoansProductsInterestCalculationPeriodType';
import { GetLoanProductsAmortizationType } from './getLoanProductsAmortizationType';
import { GetLoanProductsCurrency } from './getLoanProductsCurrency';
import { GetLoanProductsPrincipalVariationsForBorrowerCycle } from './getLoanProductsPrincipalVariationsForBorrowerCycle';


/**
 * GetLoanProductsProductIdResponse
 */
export interface GetLoanProductsProductIdResponse { 
    accountingMappings?: GetLoanAccountingMappings;
    accountingRule?: GetLoanProductsAccountingRule;
    amortizationType?: GetLoanProductsAmortizationType;
    annualInterestRate?: number;
    charges?: Array<number>;
    currency?: GetLoanProductsCurrency;
    delinquencyBucket?: GetDelinquencyBucketsResponse;
    disallowExpectedDisbursements?: boolean;
    dueDaysForRepaymentEvent?: number;
    feeToIncomeAccountMappings?: Set<GetLoanFeeToIncomeAccountMappings>;
    fixedPrincipalPercentagePerInstallment?: number;
    id?: number;
    includeInBorrowerCycle?: boolean;
    interestCalculationPeriodType?: GetLoansProductsInterestCalculationPeriodType;
    interestRateFrequencyType?: GetLoanProductsInterestRateFrequencyType;
    interestRatePerPeriod?: number;
    interestRateVariationsForBorrowerCycle?: Array<number>;
    interestType?: GetLoanProductsInterestTemplateType;
    maxPrincipal?: number;
    maxTrancheCount?: number;
    minPrincipal?: number;
    multiDisburseLoan?: boolean;
    name?: string;
    numberOfRepaymentVariationsForBorrowerCycle?: Array<number>;
    numberOfRepayments?: number;
    outstandingLoanBalance?: number;
    overDueDaysForRepaymentEvent?: number;
    overdueDaysForNPA?: number;
    paymentChannelToFundSourceMappings?: Set<GetLoanPaymentChannelToFundSourceMappings>;
    principal?: number;
    principalThresholdForLastInstalment?: number;
    productsPrincipalVariationsForBorrowerCycle?: Set<GetLoanProductsPrincipalVariationsForBorrowerCycle>;
    repaymentEvery?: number;
    repaymentFrequencyType?: GetLoanProductsRepaymentFrequencyType;
    shortName?: string;
    status?: string;
    transactionProcessingStrategyCode?: string;
    transactionProcessingStrategyName?: string;
    useBorrowerCycle?: boolean;
}

